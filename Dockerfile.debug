FROM ghcr.io/fhenixprotocol/nitro/fhenix-node-builder@sha256:78e993720077ff49972a5818765597a6425949c7477b040db04c82b0803d2d96 as winning

RUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
RUN echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
RUN apt-get update -qq && apt-get install -y nodejs npm yarn

RUN npm install -g pnpm

COPY . fheos/

WORKDIR fheos

RUN ./gen.sh

WORKDIR /workspace

COPY nitro-overrides/precompiles/FheOps.go precompiles/FheOps.go

RUN go mod tidy

RUN CGO_ENABLED=0 go install -ldflags "-s -w -extldflags '-static'" github.com/go-delve/delve/cmd/dlv@latest

RUN go build -gcflags "all=-N -l" -ldflags="-X github.com/offchainlabs/nitro/cmd/util/confighelpers.version= -X github.com/offchainlabs/nitro/cmd/util/confighelpers.datetime= -X github.com/offchainlabs/nitro/cmd/util/confighelpers.modified=" -o target/bin/nitro "/workspace/cmd/nitro"


FROM ghcr.io/fhenixprotocol/fhenix-node-dev:v0.0.7-standalone

COPY --from=winning /workspace/fheos/go-tfhe/internal/api/amd64/libtfhe_wrapper.x86_64.so /usr/lib/libtfhe_wrapper.x86_64.so
COPY --from=winning /workspace/target/bin/nitro /usr/local/bin/

ENV GOROOT=/usr/local/go
ENV GOPATH=/go/
ENV PATH=$PATH:/usr/local/go/bin:$GOPATH/bin

ADD https://go.dev/dl/go1.20.linux-amd64.tar.gz go.linux-amd64.tar.gz
RUN sudo tar -C /usr/local -xzf go.linux-amd64.tar.gz

RUN sudo chown user:user /usr/local/go

RUN sudo mkdir /go
RUN sudo chown user:user /go

RUN CGO_ENABLED=0 go install -ldflags "-s -w -extldflags '-static'" github.com/go-delve/delve/cmd/dlv@latest

ENTRYPOINT ["/go/bin/dlv", "--listen=:4001", "--headless=true", "--log=true", "--accept-multiclient", "--api-version=2", "exec", "/usr/local/bin/nitro", "--", "--conf.file", "/config/sequencer_config.json", "--node.dangerous.no-l1-listener", "--node.feed.output.enable", "--node.feed.output.port", "9642", "--http.api", "net,web3,eth,txpool,debug", "--node.seq-coordinator.my-url", "ws://sequencer:8548", "--graphql.enable", "--graphql.vhosts", "*", "--graphql.corsdomain", "*"]
