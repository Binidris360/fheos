/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { FheOps, FheOpsInterface } from "../FheOps";
import { Contract, Interface, type ContractRunner } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "a",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "b",
        type: "uint32",
      },
    ],
    name: "lior",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
      {
        internalType: "uint32",
        name: "inputLen",
        type: "uint32",
      },
    ],
    name: "moshe",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class FheOps__factory {
  static readonly abi = _abi;
  static createInterface(): FheOpsInterface {
    return new Interface(_abi) as FheOpsInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): FheOps {
    return new Contract(address, _abi, runner) as unknown as FheOps;
  }
}
